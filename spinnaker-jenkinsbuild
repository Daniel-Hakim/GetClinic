
pipeline {
    agent {
		label'master'
		}
	options {
		buildDiscarder(logRotator(numToKeepStr: '3'))
	}
	environment {
        major_version = "3.0"
    }
	stages {
		stage('pull-source') { 
			steps {	
			    script {
				    
    			    currentBuild.displayName = "# ${major_version}.$BUILD_NUMBER"
					
    				cleanWs()
				
					checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'git-credentials', url: 'https://github.com/chaitu-papa/petclinic.git']]])
    					}
						}
		}
		stage('compile-unit-test') {
			steps {
			  script {
				  if (isUnix()) {        
					 sh 'chmod +x gradlew'
					 sh "./gradlew clean build"
					  } else {
					 bat(/"gradlew.bat" clean build/) } }
			  }
		}
	   stage('code-coverage') {
			steps {
			   script {
				  if (isUnix()) {
					 sh 'chmod +x gradlew'
					 sh "./gradlew jacocoTestReport"					
				  } else {
					 bat(/"gradlew.bat" jacocoTestReport/)}}
			  }
	   }
		stage('code-analysis') {
			steps {
			   script {
				  if (isUnix()) {
					  withCredentials([string(credentialsId: 'sonar-token', variable: 'Sonar_token')]) {
					  sh "./gradlew sonarqube -Dsonar.host.url=$env.SONAR_URL -Dsonar.login=$Sonar_token -Dsonar.projectVersion=1.0.$BUILD_NUMBER" }					  
				   } else { 
					 bat(/"gradlew.bat" sonarqube/)}}
			  }
	   }
		stage('artifact-publish') {
			steps {
			   script {
				  if (isUnix()) {
					env.SNAPSHOT="SNAPSHOT"
					env.BUILD_NUM="$env.BUILD_NUMBER"
					sh 'chmod +x gradlew'
					sh "./gradlew upload --info"
					sh 'echo "ARTIFACT=${major_version}.$BUILD_NUMBER" > build.properties'
					archiveArtifacts 'build/libs/'
					archiveArtifacts 'build.properties'
				  } else {
					 bat(/"gradlew.bat" upload/) }}
			  	}
			   }
		
	 
     }
}

